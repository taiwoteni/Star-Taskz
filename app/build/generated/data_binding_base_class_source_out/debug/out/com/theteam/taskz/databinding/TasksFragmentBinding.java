// Generated by view binder compiler. Do not edit!
package com.theteam.taskz.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.theteam.taskz.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TasksFragmentBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageView category;

  @NonNull
  public final TextView dateText;

  @NonNull
  public final TextView dayText;

  @NonNull
  public final TextView todayText;

  @NonNull
  public final ViewPager viewPagerTasks;

  private TasksFragmentBinding(@NonNull CoordinatorLayout rootView, @NonNull ImageView category,
      @NonNull TextView dateText, @NonNull TextView dayText, @NonNull TextView todayText,
      @NonNull ViewPager viewPagerTasks) {
    this.rootView = rootView;
    this.category = category;
    this.dateText = dateText;
    this.dayText = dayText;
    this.todayText = todayText;
    this.viewPagerTasks = viewPagerTasks;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TasksFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TasksFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tasks_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TasksFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.category;
      ImageView category = ViewBindings.findChildViewById(rootView, id);
      if (category == null) {
        break missingId;
      }

      id = R.id.date_text;
      TextView dateText = ViewBindings.findChildViewById(rootView, id);
      if (dateText == null) {
        break missingId;
      }

      id = R.id.day_text;
      TextView dayText = ViewBindings.findChildViewById(rootView, id);
      if (dayText == null) {
        break missingId;
      }

      id = R.id.today_text;
      TextView todayText = ViewBindings.findChildViewById(rootView, id);
      if (todayText == null) {
        break missingId;
      }

      id = R.id.viewPagerTasks;
      ViewPager viewPagerTasks = ViewBindings.findChildViewById(rootView, id);
      if (viewPagerTasks == null) {
        break missingId;
      }

      return new TasksFragmentBinding((CoordinatorLayout) rootView, category, dateText, dayText,
          todayText, viewPagerTasks);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
